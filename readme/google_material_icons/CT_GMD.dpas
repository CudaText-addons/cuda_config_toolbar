program CT_GMD;

{$APPTYPE CONSOLE}
{$I windows.inc}

const

  // SRC_DIR - folder with Google Material Design Icons downloaded from https://github.com/google/material-design-icons
  // This folder should contain subfolders: action, alert, av, communication...
  SRC_DIR = 'E:\scm\Google\material-design-icons';

  // The real folder names will be in the form "Google-Material-Design-black_18x18", "Google-Material-Design-black_24x24" ...
  ICONS_DIR_PREFIX = 'Google-Material-Design';

  ID_BLACK = 0;
  ID_WHITE = 1;
  ID_GRAY = 2;
  SIZE_ID_18 = 0;
  SIZE_ID_24 = 1;
  SIZE_ID_36 = 2;
  SIZE_ID_48 = 3;
  SIZE_ID_MAX = SIZE_ID_48;

  //MAGICK = 'D:\Programy\Graphics\ImageMagick-Q16\magick.exe';
  IMGCONVERT = 'imgconvert.exe'; //http://www.pazera-software.com/products/img-convert/

type
  TFileRec = record
    InFile: string;
    OutFile: string;
  end;

var
  OutDir: string;
  Files: array of TFileRec;
  sUser: string;
  LogFile: string;


procedure AddFile(InFile, OutFile: string);
begin
  SetLength(Files, Length(Files) + 1);
  Files[High(Files)].InFile := InFile;
  Files[High(Files)].OutFile := OutFile;
end;
//------------------------------------------------------------------------------------
procedure PrepareFileArray;
begin
  AddFile('%SrcDir%\editor\1x_web\ic_insert_drive_file_%Color%_%Size%dp.png', 'f_new.png');
  AddFile('%SrcDir%\file\1x_web\ic_folder_%Color%_%Size%dp.png', 'f_open.png');
  AddFile('%SrcDir%\content\1x_web\ic_save_%Color%_%Size%dp.png', 'f_save.png');
  AddFile('%SrcDir%\content\1x_web\ic_content_cut_%Color%_%Size%dp.png', 'e_cut.png');
  AddFile('%SrcDir%\content\1x_web\ic_content_copy_%Color%_%Size%dp.png', 'e_copy.png');
  AddFile('%SrcDir%\content\1x_web\ic_content_paste_%Color%_%Size%dp.png', 'e_paste.png');
  AddFile('%SrcDir%\content\1x_web\ic_undo_%Color%_%Size%dp.png', 'e_undo.png');
  AddFile('%SrcDir%\content\1x_web\ic_redo_%Color%_%Size%dp.png', 'e_redo.png');
  AddFile('%SrcDir%\editor\1x_web\ic_format_textdirection_l_to_r_%Color%_%Size%dp.png', 'unpri.png');
  AddFile('%SrcDir%\maps\1x_web\ic_map_%Color%_%Size%dp.png', 'map.png');
  AddFile('%SrcDir%\editor\1x_web\ic_format_indent_increase_%Color%_%Size%dp.png', 'indent.png');
  AddFile('%SrcDir%\editor\1x_web\ic_format_indent_decrease_%Color%_%Size%dp.png', 'unindent.png');
  AddFile('%SrcDir%\content\1x_web\ic_clear_%Color%_%Size%dp.png', 'e_del.png');
  AddFile('%SrcDir%\content\1x_web\ic_select_all_%Color%_%Size%dp.png', 'e_sel.png');
end;
//------------------------------------------------------------------------------------
function GetInFileName(s, ColorStr, SizeStr: string): string;
begin
  s := StringReplace(s, '%Color%', ColorStr, [rfReplaceAll, rfIgnoreCase]);
  s := StringReplace(s, '%Size%', SizeStr, [rfReplaceAll, rfIgnoreCase]);
  s := StringReplace(s, '%SrcDir%', SRC_DIR, [rfReplaceAll, rfIgnoreCase]);
  Result := s;
end;
//------------------------------------------------------------------------------------
function GetSizeStr(SizeID: integer): string;
begin
  case SizeID of
    SIZE_ID_18: Result := '18';
    SIZE_ID_24: Result := '24';
    SIZE_ID_36: Result := '36';
  else
    Result := '48';
  end;
end;
//--------------------------------------------------------------------------------------
procedure ConvertToGray(const fIn, fOut: string);
var
  ExitCode: LongWord;
  Capture, CmdLine: string;
begin
  //CmdLine := '"' + MAGICK + '" "' + fIn + '" -brightness-contrast 49x0 "png8:' + fOut + '"';
  CmdLine := '"' + IMGCONVERT + '" "' + fIn + '" -b 40 -c 0.6 -g 1.2 -ov -f png -lfm Append -lf "' + LogFile + '" -o "' + fOut + '"';
  Writeln('Converting: ' + CmdLine);
  WinExecCapture(CmdLine, ExitCode, Capture, '', SW_SHOW, True);
  if Capture <> '' then Writeln(Capture);
  if ExitCode = 0 then Writeln('OK') else Writeln('FAILED!');
end;
//-----------------------------------------------------------------------------------
procedure ProcessFiles;
var
  i, xc, xs: integer;
  fIn, fOut, ColorStr, SizeStr, Dir: string;
  bCopied: Boolean;
begin
  LogFile := 'ImgConvert.log';
  if FileExists(LogFile) then DeleteFile(LogFile);
  for xc := ID_BLACK to ID_WHITE do
  begin

    if xc = ID_BLACK then ColorStr := 'black' else ColorStr := 'white';

    for xs := 0 to SIZE_ID_MAX do
    begin
      SizeStr := GetSizeStr(xs);

      for i := 0 to High(Files) do
      begin

        fIn := GetInFileName(Files[i].InFile, ColorStr, SizeStr);
        Dir := OutDir + '\' + ColorStr + '\' + ICONS_DIR_PREFIX + '-' + ColorStr + '_' + SizeStr + 'x' + SizeStr;
        if not DirectoryExists(Dir) then ForceDirectories(Dir);
        fOut := Dir + '\' + Files[i].OutFile;

        Writeln('Copying... "' + fIn + '" --> "' + fOut + '"');
        bCopied := CopyFileAs(fIn, fOut, True);
        if bCopied then Writeln('File copied') else Writeln('File NOT copied!');
        Writeln('');

        if bCopied and (xc = ID_BLACK) then
        begin
          Dir := OutDir + '\gray\' + ICONS_DIR_PREFIX + '-gray_' + SizeStr + 'x' + SizeStr;
          if not DirectoryExists(Dir) then ForceDirectories(Dir);
          fOut := Dir + '\' + Files[i].OutFile;
          ConvertToGray(fIn, fOut);
        end;

        Writeln('----------------------------------------------------------------------------------------------');

      end; // for i

    end; // for xs

  end; // for xc
end;



begin

  PrepareFileArray;
  OutDir := GetCurrentDir;
  Writeln('Output directory: ' + OutDir);
  Writeln('Press ENTER to continue.');
  Writeln('Press q + ENTER to exit.');
  Readln(sUser);
  if UpperCase(Copy(Trim(sUser), 1, 1)) = 'Q' then Exit;

  ProcessFiles;

  Writeln('Done');
  Writeln('Press ENTER...');
  Readln(sUser);

end.